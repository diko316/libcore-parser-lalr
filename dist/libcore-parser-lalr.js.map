{"version":3,"file":"libcore-parser-lalr.js","sources":["../src/state/map.js","../src/helper.js","../src/state/object.js","../src/state/define.js","../src/state/builder.js","../src/lexeme.js","../src/iterator/base.js","../src/iterator.js","../src/parser.js","../src/all.js"],"sourcesContent":["'use strict';\n\n\nimport {\n            string,\n            object,\n            array\n            \n        } from \"libcore\";\n\nfunction StateMap() {\n    this.reset();\n}\n\n\nStateMap.prototype = {\n    stateGen: 0,\n    \n    constructor: StateMap,\n    \n    generateState: function () {\n        var id = 's' + (++this.stateGen);\n        this.states[id] = {};\n        return id;\n    },\n    \n    setAnchorState: function (state) {\n        var anchors = this.anchors;\n        \n        if (!(state in anchors)) {\n            this.anchors[state] = true;\n        }\n    },\n    \n    setReduceState: function (state, name, params, ruleIndex) {\n        var ends = this.ends;\n        var current;\n        \n        if (state in ends) {\n            current = ends[state];\n            if (current[0] !== name || current[1] !== params) {\n                throw new Error(\"Reduce conflict found \" +\n                                current[0] + ' ! <- ' + name);\n            }\n        }\n        else {\n            ends[state] = [name, params, ruleIndex];\n        }\n        \n    },\n    \n    reset: function () {\n        var start = '$start',\n            states = {};\n        \n        states[start] = {};\n        this.root = '$end';\n        this.start = start;\n        this.states = states;\n        this.anchors = {};\n        this.ends = {};\n        this.exclude = {};\n    },\n    \n    setExcludes: function (exclude) {\n        var current = this.exclude;\n        var c, l;\n        \n        if (array(exclude)) {\n            for (c = -1, l = exclude.length; l--;) {\n                current[exclude[++c]] = true;\n            }\n        }\n    },\n    \n    importStates: function (definition) {\n        var isObject = object,\n            isString = string;\n        var start, states, anchors, ends, root, exclude;\n        \n        if (!isObject(definition)) {\n            throw new Error(\"Invalid Object definition parameter.\");\n        }\n        \n        states = definition.states;\n        if (!isObject(states)) {\n            throw new Error(\n                        'Invalid \"states\" Object in definition parameter.');\n        }\n        \n        root = definition.root;\n        if (!isString(root)) {\n            throw new Error(\n                        'Invalid \"root\" grammar rule in definition parameter.');\n        }\n        \n        start = definition.start;\n        if (!isString(start) || !(start in states)) {\n            throw new Error(\n                        'Invalid \"start\" state in definition parameter.');\n        }\n        \n        anchors = definition.anchors;\n        if (!isObject(anchors)) {\n            throw new Error('Invalid \"anchors\" states in definition parameter.');\n        }\n        \n        ends = definition.ends;\n        if (!isObject(anchors)) {\n            throw new Error('Invalid \"ends\" states in definition parameter.');\n        }\n\n        exclude = definition.exclude;\n        if (!isObject(exclude)) {\n            throw new Error('Invalid \"exclude\" token in definition parameter.');\n        }\n        \n        this.root = root;\n        this.start = start;\n        this.states = states;\n        this.anchors = anchors;\n        this.ends = ends;\n        this.exclude = exclude;\n        \n        return true;\n    },\n    \n    toObject: function () {\n        return {\n                root: this.root,\n                start: this.start,\n                states: this.states,\n                anchors: this.anchors,\n                ends: this.ends,\n                exclude: this.exclude\n            };\n    },\n    \n    exportStates: function (json) {\n        var current = this.toObject();\n            \n        if (json === true) {\n            try {\n                return JSON.stringify(current);\n            }\n            catch (e) {\n                return null;\n            }\n        }\n        \n        return current;\n    }\n    \n    \n};\n\n\nexport default StateMap;","'use strict';\n\nfunction empty() {\n}\n\nexport\n    function clone(obj) {\n        var E = empty;\n        E.prototype = obj;\n        return new E();\n    }\n\n","'use strict';\n\nimport { clone } from \"../helper.js\";\n\nfunction StateObject(map, id) {\n    this.id = id;\n    this.map = map;\n    this.pointer = {};\n    this.lexemes = [];\n}\n\nStateObject.prototype = {\n    constructor: StateObject,\n    id: null,\n    pointer: null,\n    parent: null,\n    rid: null,\n    lexemes: null,\n    \n    clone: function (rid) {\n        var dupe = clone(this);\n        if (rid) {\n            dupe.rid = rid;\n        }\n        dupe.parent = this;\n\n        return dupe;\n    },\n    \n    point: function (lexeme) {\n        var pointer = this.pointer,\n            lexemes = this.lexemes,\n            map = this.map;\n        var vstate, state;\n        \n        if (!(lexeme in pointer)) {\n            state = this.map.generateState();\n            vstate = this.clone();\n            vstate.id = state;\n            vstate.pointer = {};\n            vstate.lexemes = [];\n            \n            lexemes[lexemes.length] = lexeme;\n            \n            pointer[lexeme] = vstate;\n            //console.log(this.id, ':', lexeme, '-> ', state);\n            map.states[this.id][lexeme] = state;\n        }\n        \n        return pointer[lexeme];\n        \n    },\n    \n    reduce: function (rule, params, ruleIndex) {\n        this.map.setReduceState(this.id, rule, params, ruleIndex);\n    }\n};\n\nexport default StateObject;","'use strict';\n\nimport StateObject from \"./object.js\";\n\nfunction define(grammar, map, exclude) {\n    \n    var SO = StateObject,\n        ruleIndex = grammar.rules,\n        ruleGroup = grammar.ruleGroup,\n        vstate = new SO(map, map.start),\n        rootName = \"$end\",\n        pending = [[ vstate, rootName]],\n        l = 1;\n    var item, production, rule, lexeme, anchorState, ruleId, params,\n        recurse, ident, next;\n        \n    map.reset();\n    \n    map.root = grammar.root;\n    \n    if (exclude) {\n        map.setExcludes(exclude);\n    }\n    \n    for (; l--;) {\n        item = pending.splice(0, 1)[0];\n        anchorState = item[0];\n        production = item[1];\n        \n        // iterate rules\n        rule = ruleIndex[production];\n\n\n        for (; rule; rule = next) {\n            ruleId = rule[0];\n            next = rule[2];\n            \n            // reset\n            if (ruleId === false) {\n                params = 0;\n                vstate = anchorState;\n                \n            }\n            // run rule\n            else {\n                lexeme = rule[1];\n                params++;\n                \n                \n                // for non-terminal\n                if (lexeme in ruleIndex) {\n                    \n                    ident = vstate.rid;\n                    ident = ident ?\n                                ident + '-' + ruleId : ruleId;\n                    \n                    // recurse\n                    if (!(ident in vstate)) {\n                        \n                        recurse = vstate.clone(ruleId);\n                        recurse[ident] = recurse;\n                        pending[l++] = [recurse, lexeme];\n                        \n                    }\n                    \n                }\n                \n                // only if not skipped\n                vstate = vstate.point(lexeme);\n                \n                // set reduce state\n                if (!next || next[0] === false) {\n                    vstate.reduce(production, params, ruleGroup[ruleId]);\n                }\n                \n            }\n            \n        }\n\n        \n    }\n    \n    return true;\n}\n\n\nexport default define;","'use strict';\n\nimport {\n            string,\n            regex,\n            array,\n            contains\n            \n        } from \"libcore\";\n        \nimport defineStates from \"./define.js\";\n        \nvar RULE_NAME_RE = /^([A-Z][a-zA-Z]+(\\_?[a-zA-Z0-9])*|\\$end|\\$)$/;\n\nfunction define(name, rule, grammar, tokenizer) {\n    var rules = grammar.rules,\n        ruleIndex = grammar.ruleIndex,\n        terminal = grammar.terminal,\n        lexIndex = grammar.lexIndex,\n        ruleNames = grammar.ruleNames,\n        ruleNameRe = RULE_NAME_RE,\n        isString = string,\n        isRegex = regex;\n    var l, item, lexemes, token, tokenId, created,\n        prefix, suffix, from, to, current, lexemeId;\n    \n    if (isString(rule) || isRegex(rule)) {\n        rule = [rule];\n    }\n    \n    if (!array(rule)) {\n        throw new Error(\"Invalid grammar rule found in \" + name);\n    }\n    \n    from = to = null;\n    lexemes = [];\n    \n    \n    for (l = rule.length; l--;) {\n        item = rule[l];\n        \n        if (isRegex(item)) {\n            token = item.source;\n            tokenId = '/' + item.source + '/';\n            \n            // register token\n            if (!(tokenId in terminal)) {\n                tokenizer.define([ tokenId, item ]);\n                terminal[tokenId] = tokenId;\n            }\n            \n            item = tokenId;\n        }\n        else if (!isString(item)) {\n            throw new Error(\"Invalid token in grammar rule \" + item);\n        }\n        else if (!ruleNameRe.test(item)) {\n            throw new Error(\"Invalid grammar rule name format: \" + item);\n        }\n        \n        lexemes[l] = item;\n        lexemeId = 'r' + (++grammar.rgenId);\n        lexIndex[lexemeId] = item;\n        created = [lexemeId, item, from];\n        \n        if (!from) {\n            to = created;\n        }\n        from = created;\n\n    }\n    \n    suffix = ' -> ' + lexemes.join(',');\n    prefix = name + ':';\n    tokenId = name + suffix;\n    \n    if (tokenId in ruleIndex) {\n        throw new Error(\"Grammar rule is already defined \" + name + suffix);\n    }\n    else {\n        ruleIndex[tokenId] = true;\n    }\n    \n    if (!(name in rules)) {\n        rules[name] = null;\n        ruleNames[ruleNames.length] = name;\n    }\n    \n    // append\n    from = [false, null, from];\n    current = rules[name];\n    \n    if (current) {\n        to[2] = current;\n    }\n    \n    \n    rules[name] = from;\n    \n    return [from[2][0], to[0]];\n}\n\n\nfunction build(root, stateMap, tokenizer, definitions, exclude) {\n    var isString = string,\n        isArray = array,\n        isRegex = regex,\n        defineRule = define,\n        ruleNameRe = RULE_NAME_RE,\n        ruleNames = [];\n    var c, l, dc, dl, name, definition,\n        rules, grammar, groups, group, index, terminal;\n        \n    name = null;\n    rules = {};\n    grammar = {\n        root: '$' + root,\n        rgenId: 0,\n        ruleNames: ruleNames = [],\n        rules: rules,\n        terminal: terminal = {},\n        lexIndex: index = {},\n        ruleIndex: {},\n        ruleGroup: groups = {}\n    };\n    \n    // augment root\n    definitions.splice(definitions.length,\n                       0,\n                       \"$end\", [\n                            [ root, \"$\" ]\n                        ]);\n    \n    for (c = -1, l = definitions.length; l--;) {\n        \n        definition = definitions[++c];\n        \n        if (isString(definition)) {\n            \n            if (!ruleNameRe.test(definition)) {\n                throw new Error(\"Invalid grammar rule name \" + definition);\n            }\n            name = definition;\n        \n        }\n        else if (isArray(definition)) {\n            \n            // do not accept grammar rule if it doesn't have name\n            if (!name) {\n                throw new Error(\"Invalid grammar rules parameter.\");\n            }\n            \n            dc = -1;\n            dl = definition.length;\n            \n            for (; dl--;) {\n                group = defineRule(name,\n                                   definition[++dc],\n                                   grammar,\n                                   tokenizer);\n                // register group\n                groups[group[1]] = name + (dc + 1);\n            }\n\n        }\n        else {\n            throw new Error(\"Invalid item in definitions parameter.\");\n        }\n        \n    }\n    \n    // add excludes\n    if (exclude) {\n        exclude = exclude.slice(0);\n        \n        for (l = exclude.length; l--;) {\n            definition = exclude[l];\n            \n            if (!isRegex(definition)) {\n                throw new Error(\"Invalid exclude token parameter.\");\n            }\n            \n            name = '/' + definition.source + '/';\n            if (!(name in terminal)) {\n                tokenizer.define([ name, definition ]);\n                terminal[name] = name;\n                exclude[l] = name;\n            }\n            else {\n                exclude.splice(l, 1);\n            }\n            \n        }\n        \n    }\n    \n    if (!contains(rules, root)) {\n        throw new Error(\"Invalid root grammar rule parameter.\");\n    }\n    //console.log(\"map? \", stateMap);\n    return defineStates(grammar, stateMap, exclude);\n\n}\n\nexport default build;\n\n","'use strict';\n\nimport { contains } from \"libcore\";\n\nvar TYPE = {\n        terminal: 1,\n        nonterminal: 2,\n        compound: 3\n    };\n    \n    \n\nfunction Lexeme(type) {\n    this.useType(type);\n}\n\n\nLexeme.prototype = {\n    constructor: Lexeme,\n    name: null,\n    rule: null,\n    value: null,\n    reduceCount: 0,\n    from: 0,\n    to: 0,\n    \n    parent: null,\n    first: null,\n    last: null,\n    next: null,\n    previous: null,\n    \n    useType: function (type) {\n        var types = TYPE;\n        this.type = contains(types, type) ?\n                        types[type] : types.token;\n    }\n};\n\nexport {\n        TYPE as type,\n        Lexeme\n    };\n\nexport default Lexeme;","'use strict';\n\nimport {\n            string,\n            number,\n            object\n        } from \"libcore\";\n        \nimport Lexeme from \"../lexeme.js\";\n\nvar INVALID_STATE_HANDLER = \"Invalid result from state handler\";\n\nfunction BaseIterator(parser) {\n    if (!object(parser)) {\n        throw new Error(\"Invalid parser parameter.\");\n    }\n    \n    this.parser = parser;\n    this.reset();\n    \n    this.start = ':start';\n}\n\n\nBaseIterator.prototype = {\n    constructor: BaseIterator,\n    subject: '',\n    returns: false,\n    current: null,\n    ready: false,\n    completed: false,\n    error: null,\n    \n    actions: {\n        ':start': {\n            0: ':fail',\n            1: ':tokenize'\n            \n        },\n        \n        ':tokenize': {\n            0: ':fail',\n            1: ':tokenize',\n            2: ':shift',\n            3: ':reduce'\n        },\n        \n        ':shift': {\n            0: ':fail',\n            1: ':tokenize'\n        },\n        \n        ':reduce': {\n            0: ':fail',\n            1: ':shift',\n            2: ':reduce',\n            3: ':success'\n        },\n        ':fail': {},\n        ':success': {}\n    },\n    \n    ':start': function () {\n        var me = this;\n        \n        me.params = me.nextTokenIndex;\n        \n        return 1;\n    },\n    \n    ':tokenize': function (from) {\n        var me = this,\n            parser = me.parser,\n            map = parser.map,\n            ends = map.ends,\n            states = map.states,\n            state = me.pstate,\n            token = parser.tokenizer.tokenize(from,\n                                              me.subject);\n            \n        var name, to, ref, lexeme;\n        \n        \n        if (token) {\n            name = token[0];\n            to = token[2];\n            \n            // tokenize again\n            if (!this.isAcceptableToken(token)) {\n                me.params = to;\n                return 1;\n            }\n            \n            lexeme = new Lexeme('terminal');\n            lexeme.name = name;\n            lexeme.value = token[1];\n            lexeme.from = from;\n            lexeme.to = to;\n            \n            me.nextTokenIndex = to;\n            me.params = lexeme;\n            \n            // found shift state\n            ref = states[state];\n            if (name in ref) {\n                return 2;\n            }\n\n        }\n        \n        // can reduce remaining buffer\n        if (me.buffer.length && state in ends) {\n            return 3;\n        }\n        \n        // failed\n        me.params = 'Invalid token';\n        return 0;\n        \n    },\n    \n    ':shift': function (lexeme) {\n        var me = this,\n            buffer = me.buffer,\n            states = me.parser.map.states,\n            state = me.pstate,\n            name = lexeme.name;\n        \n        buffer[buffer.length] = [state, lexeme];\n        \n        me.pstate = states[state][name];\n        me.current = lexeme;\n        me.params = null;\n        \n        // do not return \"$\" token\n        me.returns = name !== \"$\";\n        me.params = me.nextTokenIndex;\n        return 1;\n\n    },\n    \n    ':reduce': function (lexeme) {\n        var me = this,\n            map = me.parser.map,\n            buffer = me.buffer,\n            bl = buffer.length,\n            ends = map.ends,\n            states = map.states,\n            state = me.pstate,\n            reduce = ends[state],\n            name = reduce[0],\n            params = reduce[1],\n            l = params,\n            endIndex = l - 1,\n            created = new Lexeme('nonterminal'),\n            values = [];\n            \n        var litem, item, from, to, ref, last;\n        \n        created.name = name;\n        created.rule = reduce[2];\n        last = null;\n        \n        for (; l--;) {\n            item = buffer[--bl];\n            state = item[0];\n            litem = item[1];\n            \n            // create range\n            from = litem.from;\n            if (l === endIndex) {\n                to = litem.to;\n            }\n            \n            // create connection\n            litem.parent = created;\n             \n            if (last) {\n                last.previous = litem;\n                litem.next = last;\n            }\n            else {\n                created.last = litem;\n            }\n            created.first = last = litem;\n            values[l] = litem.value;\n        }\n        \n        created.value = values;\n        created.from = from;\n        created.to = to;\n        \n        buffer.length = bl;\n        \n        me.current = created;\n        \n        created.reduceCount = params;\n        \n        // only if it ended\n        if (name === '$end') {\n            \n            // end\n            if (bl === 0) {\n                litem = created.first;\n                \n                created.useType('end');\n                created.last = litem;\n                created.value = [litem.value];\n                created.rule = map.root;\n                created.reduceCount = 1;\n                \n                me.params = created;\n                \n                return 3;\n            }\n            else {\n                me.params = 'Failed last reduce';\n                return 0;\n            }\n            \n        }\n        \n        buffer[bl++] = [state, created];\n        me.returns = true;\n        \n        // iterate\n        state = states[state][name];\n        ref = states[state];\n        \n        name = lexeme.name;\n        me.pstate = state;\n        \n        // shift\n        if (name in ref) {\n            return 1;\n        \n        }\n        // reduce\n        else if (state in ends) {\n            return 2;\n        }\n        \n        me.params = 'failed reduce! inside :reduce';\n        return 0;\n        \n    },\n    \n    ':success': function (lexeme) {\n        var me = this;\n        \n        me.completed =\n            me.returns = true;\n\n        me.current = lexeme;\n        \n        return false;\n    },\n    \n    ':fail': function (error) {\n        var me = this;\n        \n        me.error = error;\n        me.completed = true;\n        \n        return false;\n    },\n    \n    isAcceptableToken: function (token) {\n        return !(token[0] in this.parser.map.exclude);\n    },\n    \n    update: function (value) {\n        var me = this,\n            current = me.current;\n        \n        if (!me.error && current) {\n            \n            current.value = value;\n            \n        }\n        \n        return this;\n    },\n    \n    reset: function () {\n        var parser = this.parser;\n        \n        this.nextTokenIndex = 0;\n        this.cursor = 0;\n        this.buffer = [];\n        \n        this.state = this.start;\n        this.pstate = parser.map.start;\n        this.params = null;\n        \n        if (!this.subject) {\n            delete this.ready;\n        }\n        \n        delete this.complete;\n        delete this.error;\n        \n        delete this.returns;\n        delete this.current;\n        \n    },\n    \n    set: function (subject) {\n        if (!string(subject)) {\n            throw new Error(\"Invalid String subject parameter.\");\n        }\n        \n        this.reset();\n        this.subject = subject;\n        this.ready = true;\n        \n\n    },\n    \n    next: function () {\n        var me = this,\n            actions = me.actions,\n            isNumber = number,\n            completed = me.completed,\n            returns = false;\n        var state, params, result, ref, current;\n\n        // reset current\n        if (!completed) {\n            delete me.current;\n        }\n        \n        for (; !completed;) {\n            \n            state = me.state;\n            params = me.params;\n            \n            // check if it action can be transitioned\n            if (!(state in me)) {\n                throw new Error(\"No handler found for state \" + state);\n            }\n            \n            // handle transition\n            result = me[state](params);\n            returns = me.returns;\n            delete me.returns;\n            current = me.current;\n            completed = me.completed;\n            \n            // break on error\n            if (me.error) {\n                break;\n            }\n            \n            // after transition, may error caught or successfully completed\n            if (!completed) {\n                \n                // accepts number result\n                if (!isNumber(result)) {\n                    throw new Error(INVALID_STATE_HANDLER + state);\n                }\n                    \n                // can transition to next state\n                ref = actions[state];\n                \n                if (!(result in ref)) {\n                    throw new Error(INVALID_STATE_HANDLER + state);\n                }\n                \n                me.state = ref[result];\n            }\n            \n            // return params\n            if (returns === true) {\n                return current;\n            }\n            \n            \n        }\n        \n        return me.error || !completed ? false : null;\n        \n    }\n};\n\nexport default BaseIterator;\n","'use strict';\n\nimport {\n            string,\n            method\n        } from \"libcore\";\n\nimport BaseIterator from \"./iterator/base.js\";\n        \nvar defaultIteratorName = \"base\",\n    ITERATORS = {};\n\nexport\n    function register(name, Class) {\n        var Base = BaseIterator;\n        \n        if (!string(name)) {\n            throw new Error(\"Invalid iterator name parameter.\");\n        }\n        \n        if (!method(Class) ||\n            (Class !== Base && !(Class.prototype instanceof Base))) {\n            throw new Error(\"Invalid iterator Class parameter.\");\n        }\n        \n        ITERATORS[':' + name] = Class;\n        \n        return true;\n    }\n\nexport\n    function get(name) {\n        var list = ITERATORS;\n        \n        if (string(name)) {\n            name = ':' + name;\n            if (name in list) {\n                return list[name];\n            }\n        }\n        \n        return null;\n    }\n\nexport {\n            defaultIteratorName as defaultIterator,\n            BaseIterator as Base\n        };\n\nregister(defaultIteratorName, BaseIterator);\n\n\n","'use strict';\n\nimport {\n            string,\n            object,\n            array\n\n        } from \"libcore\";\n\nimport Tokenizer from \"libcore-tokenizer\";\n\nimport StateMap from \"./state/map.js\";\n\nimport builder from \"./state/builder.js\";\n\nimport {\n            get as iteratorGet,\n            defaultIterator\n        } from \"./iterator.js\";\n\n\nfunction Parser(root, definition, exclude) {\n    \n    this.tokenizer = new Tokenizer();\n    this.map = new StateMap();\n    \n    if (arguments.length) {\n        this.define(root, definition, exclude);\n    }\n}\n\n\nParser.prototype = {\n    subject: '',\n    tokenizer: null,\n    map: null,\n    ready: false,\n    constructor: Parser,\n    \n    iterator: function (name) {\n        var get = iteratorGet;\n        var Iterator;\n        \n        if (arguments.length) {\n            Iterator = get(name);\n            if (!Iterator) {\n                throw new Error(\"Invalid iterator name parameter.\");\n            }\n        }\n        else {\n            Iterator = get(defaultIterator);\n        }\n        \n        return new Iterator(this);\n    },\n    \n    define: function (root, definition, exclude) {\n        var isArray = array;\n        var ready;\n        \n        if (!isArray(exclude)) {\n            exclude = [];\n        }\n        \n        if (!string(root)) {\n            throw new Error(\"Invalid root grammar rule parameter.\");\n        }\n        \n        if (!isArray(definition)) {\n            throw new Error(\"Invalid grammar rules definition parameter\");\n        }\n        \n        \n        this.ready = ready = builder(root,\n                                    this.map,\n                                    this.tokenizer,\n                                    definition,\n                                    exclude);\n        \n        return ready;\n\n    },\n    \n    fromJSON: function (json) {\n        var isObject = object;\n        var tokenMap;\n        \n        if (string(json)) {\n            try {\n                json = JSON.parse(json);\n            }\n            catch (e) {\n                throw new Error(\"Invalid JSON String json parameter.\");\n            }\n        }\n        \n        if (!isObject(json)) {\n            throw new Error(\"Invalid Object json parameter.\");\n        }\n        \n        tokenMap = json.tokens;\n        \n        if (!isObject(tokenMap)) {\n            throw new Error('Invalid \"tokens\" property of json parameter.');\n        }\n        \n        this.tokenizer.fromJSON(tokenMap);\n        this.map.importStates(json);\n        \n        return this;\n        \n    },\n    \n    toJSON: function () {\n        return JSON.stringify(this.toObject());\n    },\n    \n    toObject: function () {\n        var object;\n        \n        if (!this.ready) {\n            throw new Error(\"Grammar rules is not yet defined.\");\n        }\n        \n        object = this.map.toObject();\n        object.tokens = this.tokenizer.toObject();\n        \n        return object;\n    },\n    \n    parse: function (subject, reducer, iterator) {\n        var isString = string,\n            rpn = [],\n            rl = 0;\n        var lexeme, name, value;\n        \n        if (!isString(subject)) {\n            throw new Error(\"Invalid string subject parameter\");\n        }\n        \n        iterator = isString(iterator) ?\n                        this.iterator(iterator) :\n                        this.iterator();\n        \n        if (!iterator) {\n            throw new Error(\"Invalid Iterator parameter.\");\n        }\n        \n        if (!object(reducer)) {\n            reducer = {};\n        }\n        \n        iterator.set(subject);\n        \n        for (lexeme = iterator.next(); lexeme; lexeme = iterator.next()) {\n            rpn[rl++] = lexeme;\n            \n            name = lexeme.name;\n            if (name in reducer) {\n                value = reducer[name](name, lexeme.value, lexeme);\n                \n                if (typeof value !== \"undefined\") {\n                    lexeme.value = value;\n                }\n                else if (lexeme.params !== 0) {\n                    lexeme.value = null;\n                }\n                \n            }\n            \n        }\n        \n        return iterator.error ? false : rpn;\n        \n    }\n};\n\n\nexport default Parser;","'use strict';\n\nimport {\n            string,\n            object\n        } from \"libcore\";\n        \nimport Parser from \"./parser.js\";\n\nexport { Parser };\n\nexport {\n            Base as Iterator,\n            register as registerIterator\n        } from \"./iterator.js\";\n\nexport\n    function define(root, definitions, exclusions) {\n        return new Parser(root, definitions, exclusions);\n    }\n\nexport\n    function load(json) {\n        var parser;\n        \n        if (string(json)) {\n            try {\n                json = JSON.parse(json);\n            }\n            catch (e) {\n                throw new Error(\n                    \"Unable to load from invalid json JSON String parameter: \" +\n                    e.toString());\n            }\n        }\n        else if (!object(json)) {\n            throw new Error(\"Unable to load from invalid json Object parameter.\");\n        }\n        \n        parser = new Parser();\n        \n        try {\n            parser.fromJSON(json);\n        }\n        catch (e) {\n            throw new Error(e);\n        }\n        \n        return parser;\n    }\nexport\n    function isParser(parser) {\n        return parser instanceof Parser;\n    }\n\n\n\n\n// integrate to libcore\n//module.exports = libcore.lalr = {\n//    Parser: Parser,\n//    Iterator: iteratorManager.Base,\n//    isParser: isParser,\n//    define: define,\n//    load: load,\n//    registerIterator: iteratorManager.register\n//};"],"names":["array","object","string","define","regex","contains","defineStates","number","method","get","iteratorGet","defaultIterator","builder"],"mappings":"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"}